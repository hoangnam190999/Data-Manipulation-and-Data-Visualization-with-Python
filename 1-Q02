{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "a986b63d",
      "metadata": {
        "id": "a986b63d"
      },
      "source": [
        "### **Chapter 2 - Exercise 5**  \n",
        "\n",
        "**Read the file `data.txt`, which contains the heights of 10 students.**  \n",
        "\n",
        "- Print the **highest** and **lowest** heights.  \n",
        "- Calculate and print the **average height**.  \n",
        "- Calculate and print the **standard deviation** using the given formula (`image.png`)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "37d1d043",
      "metadata": {
        "id": "37d1d043"
      },
      "outputs": [],
      "source": [
        "with open('data.txt') as f:\n",
        "    dt = f.read()\n",
        "dt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "76b08c85-fcf0-44d1-a546-50f4d538bd37",
      "metadata": {
        "id": "76b08c85-fcf0-44d1-a546-50f4d538bd37"
      },
      "outputs": [],
      "source": [
        "dt = dt.split(', ')\n",
        "dt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "fbc815e3-3e07-4a70-88fe-9e6a5e7874fa",
      "metadata": {
        "id": "fbc815e3-3e07-4a70-88fe-9e6a5e7874fa"
      },
      "outputs": [],
      "source": [
        "dt1 = [float(x) for x in dt]\n",
        "dt1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "61e0459c-47c2-444c-b99b-3b8c7ca712c1",
      "metadata": {
        "id": "61e0459c-47c2-444c-b99b-3b8c7ca712c1"
      },
      "outputs": [],
      "source": [
        "dt2 = list(map(float,dt))\n",
        "dt2"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "43c935fc-36ea-4c55-a4ef-35e01392c6bc",
      "metadata": {
        "id": "43c935fc-36ea-4c55-a4ef-35e01392c6bc"
      },
      "outputs": [],
      "source": [
        "tb = sum(dt1)/len(dt1)\n",
        "print(f'Highest height: {max(dt1)}')\n",
        "print(f'Lowest height: {min(dt1)}')\n",
        "print(f'Average height: {tb}')\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bfa83c3a-1c88-41cf-9a74-c0c5530e2d66",
      "metadata": {
        "id": "bfa83c3a-1c88-41cf-9a74-c0c5530e2d66"
      },
      "outputs": [],
      "source": [
        "tu = [(x-tb)**2 for x in dt1]\n",
        "tu"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "664b684c-85eb-4cd0-af9f-94e954a2f9a2",
      "metadata": {
        "id": "664b684c-85eb-4cd0-af9f-94e954a2f9a2"
      },
      "outputs": [],
      "source": [
        "import math"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7b7ce380-368a-4223-983c-ea3fcaec0ddb",
      "metadata": {
        "id": "7b7ce380-368a-4223-983c-ea3fcaec0ddb"
      },
      "outputs": [],
      "source": [
        "dlc = math.sqrt(sum(tu)/len(dt1))\n",
        "dlc"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3db9768a-1d36-4482-84c6-28fba2b2612c",
      "metadata": {
        "id": "3db9768a-1d36-4482-84c6-28fba2b2612c"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bce31339-ec7c-4c91-8c0c-2b721da56e55",
      "metadata": {
        "id": "bce31339-ec7c-4c91-8c0c-2b721da56e55"
      },
      "outputs": [],
      "source": [
        "arr = np.loadtxt('data.txt',delimiter=',')\n",
        "arr"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "beff9fc8-0636-4f89-b663-53cc4f7f8203",
      "metadata": {
        "id": "beff9fc8-0636-4f89-b663-53cc4f7f8203"
      },
      "outputs": [],
      "source": [
        "print(f'Highest height: {max(arr)}')\n",
        "print(f'Lowest height: {min(arr)}')\n",
        "print(f'Average height: {arr.mean()}')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "24b5e908-1229-4e11-abe6-6df96840355e",
      "metadata": {
        "id": "24b5e908-1229-4e11-abe6-6df96840355e"
      },
      "outputs": [],
      "source": [
        "print(f'Standard deviation: {arr.std()}')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d1a8461c-5f46-4416-84a5-1d6466c03e5a",
      "metadata": {
        "id": "d1a8461c-5f46-4416-84a5-1d6466c03e5a"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.6"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}